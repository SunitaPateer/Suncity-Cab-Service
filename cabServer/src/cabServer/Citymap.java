/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cabServer;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Line2D;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Dimpy
 */
public class Citymap extends javax.swing.JFrame implements MouseListener, MouseMotionListener{

    /**
     * Creates new form Citymap
     */
    
    
    private static final long serialVersionUID = 1L;
    int j1 = 0;
	int j2 = 0;

	Point point1, point2;
	private Line2D line2d;
	 int[][] adj = new int[10][10];
	 int h;
	 int[][] Adj = new int[h][h];
	 int[][] line = new int[4][10];
	 int[][] city = new int[2][10];
         int i1=0;
	 int i2=0;
         int x, y;
	int radius = 15;
	
    public Citymap() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("no. of cities");

        jTextField1.setText("no. of cities");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(330, 330, 330))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public static boolean check_contain(int X, int Y, int X1, int Y1) 
	 {
		double dist = Math.sqrt((X1-X)*(X1-X) + (Y1-Y)*(Y1-Y));
		if (dist < 25)
			return true;
		return false; 	  
	 }
    
    
    public void drawCircle(int x, int y, Object source, boolean fill,
			String name_yoyo) {
		if (source instanceof JPanel) {
			Graphics g = ((JComponent) source).getGraphics();
			// g.clearRect(0,0,450,1000);
			g.drawOval(x - radius, y - radius, (2 * radius - 1),
					(2 * radius - 1));
			g.drawString(name_yoyo, (point1.x - 20), (point1.y - 28));
			g.setColor(Color.blue);
			if (fill) {
				g.fillOval(x - radius, y - radius, 2 * radius - 1,
						2 * radius - 1);
			}
		} // else ignore
	}
    
    public void paintComponent(Graphics g) {

		// super.paintComponent(g);

		Graphics2D g2d = (Graphics2D) g;
		if (point1 != null && point2 != null) {

			g2d.setPaint(Color.BLACK);
			g2d.setStroke(new BasicStroke(1.5f));
			g2d.draw(line2d);

			

		}
	}
    
    public static void addRectangle(int x, int y, Object source, Color color)
	{
		Graphics g = ((JComponent) source).getGraphics();
		g.setColor(color);
		g.drawRect(x, y, 10, 10);
	}
    
    public void drawline(int x1, int y1, int x2, int y2, Object source,
			String Lane) {
		if (source instanceof JPanel) {
			Graphics g = ((JComponent) source).getGraphics();
			// g.clearRect(0,0,450,1000);
			g.setColor(Color.BLACK);
			g.drawLine(point1.x, point1.y, point2.x, point2.y);
			g.drawString(Lane, ((point1.x + point2.x) / 2) + 5,
					(point1.y + point2.y) / 2);
		}
	}
    
    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseReleased

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        

    }//GEN-LAST:event_formMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:   for(int j=0;j<10;j++)
        	   
        		     for(int j=0;j<10;j++)
        	   {
        		   for(int i=0;i<10;i++)
        		   {
        			   if (check_contain(city[0][i], city[1][i], line[0][j], line[1][j]))
        			   {
        				   i1 = i;
        				   for(int k=0;k<10;k++)
        				   {
        					   if (check_contain(city[0][k], city[1][k], line[2][j], line[3][j]))
        					   {
        						   i2 = k;
        						   adj[i1][i2] = 1;
        						   adj[i2][i1] = 1;
        						   i1 = 0;
        						   i2 = 0;
        					   }
        					   else
        					   {
        						   adj[i1][i2] = 0; 
        						   adj[i2][i1] = 0; 
        					   }
        				   }
        			   } 
        		   }
        	   }
        	   for(int k=0;k<h;k++)
        	   {
        		   for(int l=0;l<h;l++)
        		   {
        			   System.out.print(adj[k][l] + " ");
        		   }
        		   System.out.println();
        	   }
        	   addRectangle(city[0][0]-15, city[1][0]-15, evt.getSource(), Color.yellow);
        	   repaint();
        	   addRectangle(city[0][0], city[1][0]-15, evt.getSource(), Color.cyan);
        	   repaint();
        	   addRectangle(city[0][0]+15, city[1][0]-15, evt.getSource(), Color.magenta);
        	   repaint();
        	   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1FocusLost

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        // TODO add your handling code here: point2 = new Point();
		
    }//GEN-LAST:event_jPanel1MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Citymap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Citymap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Citymap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Citymap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Citymap().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mousePressed(MouseEvent e) {
      point1 = new Point();
		point1.x = e.getX();
		point1.y = e.getY();
    }

    @Override
    public void mouseReleased(MouseEvent e) {
       point2.x = e.getX();
		point2.y = e.getY();
		if (point1.x != point2.x && point1.y != point2.y) {
			String lane = JOptionPane
					.showInputDialog("Please enter the name of the Road:");
			drawline(point1.x, point1.y, point2.x, point2.y, e.getSource(),
					lane);
			repaint();
			line[0][j1] = point1.x;
			line[1][j1] = point1.y;
			line[2][j1] = point2.x;
			line[3][j1] = point2.y;
			System.out.println("Line" + "-" + lane);
			System.out.println("x1 = " + point1.x + " , " + "y1 = " + point1.y
					+ " ; " + "x2 = " + point2.x + " , " + "y2 = " + point2.y);
			j1++;
		} else {
			if (j2 < h) {
				String name = JOptionPane
						.showInputDialog("Please enter the name of the City:");
				if (name != null) {
					drawCircle(e.getX() - (radius / 2),
							e.getY() - (radius / 2), e.getSource(), true, name);
					repaint();
				}
			city[0][j2] = point1.x;
			city[1][j2] = point1.y;
			System.out.println("Circle" + "-" + (j2 + 1));
			System.out.println("x = " + point1.x + " , " + "y = " + point1.y);
			j2++;
			}
		}
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseExited(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
